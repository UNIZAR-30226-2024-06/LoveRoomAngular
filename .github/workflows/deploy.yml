name: Docker Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t loveroom \
          --build-arg APIKEY="${{ secrets.APIKEY }}" \
          --build-arg HOST_BACK="${{ secrets.HOST_BACK }}" front/
        
      - name: Save Docker image to file
        run: docker save loveroom > image.tar

      - name: Setup SSH
        run: |
          echo "${{ secrets.AZURE_SSH_KEY_ANGULAR }}" > ssh_key
          chmod 600 ssh_key
         
      - name: Set timestamp as environment variable
        run: |
          echo "TIMESTAMP=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
      - name: Debug - Print TIMESTAMP
        run: |
          echo "TIMESTAMP: ${{ env.TIMESTAMP }}"
      - name: Add timestamp to image name
        run: |
          mv image.tar "image_${{ env.TIMESTAMP }}.tar"
      - name: Copy image to Azure VM
        run: |
          scp -i ssh_key -o StrictHostKeyChecking=no "image_${{ env.TIMESTAMP }}.tar" ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }}:/home/${{ secrets.AZURE_USERNAME }}/loveroom_images/
      - name: Stop and remove existing Docker container on Azure VM if running
        run: |
          is_running=$(ssh -i ssh_key -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST_ANGULAR }} "docker ps -q -f name=loveroom_container")
          if [ -n "$is_running" ]; then
            echo "Container is running."
            ssh -i ssh_key -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST_ANGULAR}} "docker stop loveroom_container && docker rm loveroom_container"
          else
            echo "Container is not running."
          fi
      - name: Load Docker image on Azure VM
        run: |
          ssh -i ssh_key  -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST_ANGULAR }} "docker load -i /home/${{ secrets.AZURE_USERNAME }}/loveroom_images/image_${{ env.TIMESTAMP }}.tar"
      - name: Run Docker container on Azure VM
        run: ssh -i ssh_key  -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }} 'docker run -d --name loveroom_container -p 5000:5000 -e HOST_BACK="${{ secrets.HOST_BACK }}" -e HOST_BACK="${{ secrets.HOST_BACK }}" loveroom'

      #- name: Change Nginx Configuration on Azure VM
      #  run: ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }} "sudo sed '13 a client_max_body_size 100M;' -i /etc/nginx/nginx.conf"

      - name: Restart Nginx on Azure VM
        run: |
          ssh -i ssh_key  -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }} "sudo systemctl restart nginx"
